{
  "info": {
    "_postman_id": "78a3a941-c817-45ff-b48a-fd1d96ce4eb1",
    "name": "Itemstockinginquiries",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "<div>\n<span style=\"color: #c74634\">Last Updated July 2025</span><br><br>\n<p>You can use Oracle REST APIs to view and manage data stored in Oracle Supply Chain Management Cloud.</p><p>Whether you're experienced with or new to REST, use this guide to find what you need, including:</p><ul><li>A quick start that walks you through a simple request example.</li><li>Detailed descriptions for each REST API resource.</li></ul></div>\n",
      "type": "text/plain"
    }
  },
  "item": [
    {
      "name": "Itemstockinginquiries",
      "description": "",
      "item": [
        {
          "name": "itemStockingInquiries",
          "description": "",
          "item": [
            {
              "name": "{itemStockingInquiriesUniqID}",
              "description": "",
              "item": [
                {
                  "id": "1aea114a-e59a-4ca0-8ecb-a2979f71dd91",
                  "name": "Get on-hand quantity details for an item",
                  "request": {
                    "name": "Get on-hand quantity details for an item",
                    "description": {},
                    "url": {
                      "path": [
                        "itemStockingInquiries",
                        ":itemStockingInquiriesUniqID"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                            "type": "text/plain"
                          },
                          "key": "expand",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                            "type": "text/plain"
                          },
                          "key": "fields",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                            "type": "text/plain"
                          },
                          "key": "onlyData",
                          "value": "<boolean>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter specifies dependencies which are fields that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The fields specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the fields will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency fields.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                            "type": "text/plain"
                          },
                          "key": "dependency",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                            "type": "text/plain"
                          },
                          "key": "links",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "type": "any",
                          "value": "<string>",
                          "key": "itemStockingInquiriesUniqID",
                          "disabled": false,
                          "description": {
                            "content": "(Required) This is the hash key of the attributes which make up the composite key--- OrganizationId, InventoryItemId, SubinventoryCode, LocatorId and LotNumber ---for the Item Stocking Inquiries resource and used to uniquely identify an instance of Item Stocking Inquiries. The client should not generate the hash key value.  Instead, the client should query on the Item Stocking Inquiries collection resource with a filter on the primary key values in order to navigate to a specific instance of Item Stocking Inquiries.<br><br>For example: itemStockingInquiries?q=OrganizationId=&lt;value1&gt;;InventoryItemId=&lt;value2&gt;;SubinventoryCode=&lt;value3&gt;;LocatorId=&lt;value4&gt;;LotNumber=&lt;value5&gt;",
                            "type": "text/plain"
                          }
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": {
                          "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                          "type": "text/plain"
                        },
                        "key": "REST-Framework-Version",
                        "value": "5"
                      },
                      {
                        "disabled": false,
                        "description": {
                          "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                          "type": "text/plain"
                        },
                        "key": "Metadata-Context",
                        "value": "<string>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {},
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "050a3532-99c6-42eb-b008-1a0f1b23f682",
                      "name": "The following table describes the default response for this task.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "itemStockingInquiries",
                            ":itemStockingInquiriesUniqID"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "description": {
                                "content": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                                "type": "text/plain"
                              },
                              "key": "expand",
                              "value": "<string>"
                            },
                            {
                              "disabled": false,
                              "description": {
                                "content": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                                "type": "text/plain"
                              },
                              "key": "fields",
                              "value": "<string>"
                            },
                            {
                              "disabled": false,
                              "description": {
                                "content": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                                "type": "text/plain"
                              },
                              "key": "onlyData",
                              "value": "<boolean>"
                            },
                            {
                              "disabled": false,
                              "description": {
                                "content": "This parameter specifies dependencies which are fields that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The fields specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the fields will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency fields.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                                "type": "text/plain"
                              },
                              "key": "dependency",
                              "value": "<string>"
                            },
                            {
                              "disabled": false,
                              "description": {
                                "content": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                                "type": "text/plain"
                              },
                              "key": "links",
                              "value": "<string>"
                            }
                          ],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": {
                              "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                              "type": "text/plain"
                            },
                            "key": "REST-Framework-Version",
                            "value": "5"
                          },
                          {
                            "disabled": false,
                            "description": {
                              "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                              "type": "text/plain"
                            },
                            "key": "Metadata-Context",
                            "value": "<string>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "Metadata-Context",
                          "value": ""
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "REST-Framework-Version",
                          "value": ""
                        }
                      ],
                      "body": "{\n  \"Description\": \"<string>\",\n  \"OrganizationId\": \"<integer>\",\n  \"SubinventoryCode\": \"<string>\",\n  \"SerialNumberControlCode\": \"<number>\",\n  \"Locator\": \"<string>\",\n  \"ItemNumber\": \"<string>\",\n  \"PackingStatus\": \"<number>\",\n  \"AvailableToTransact\": \"<number>\",\n  \"OrganizationCode\": \"<string>\",\n  \"links\": [\n    {\n      \"kind\": \"collection\",\n      \"rel\": \"parent\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    },\n    {\n      \"kind\": \"item\",\n      \"rel\": \"custom\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    }\n  ],\n  \"PrimaryImageURL\": \"<string>\",\n  \"LotNumber\": \"<string>\",\n  \"PrimaryUOMCode\": \"<string>\",\n  \"StockingUnitOfMeasure\": \"<string>\",\n  \"InventoryItemId\": \"<long>\",\n  \"LocatorId\": \"<integer>\",\n  \"LastReplenishedDate\": \"<dateTime>\",\n  \"StockingUOMCode\": \"<string>\",\n  \"PrimaryUnitOfMeasure\": \"<string>\",\n  \"LotControlCode\": \"<number>\",\n  \"LastCountDate\": \"<dateTime>\",\n  \"SerialNumber\": \"<string>\",\n  \"StockingOnhandQuantity\": \"<number>\",\n  \"ParLocation\": \"<integer>\",\n  \"PrimaryOnhandQuantity\": \"<number>\",\n  \"RevisionControlCode\": \"<number>\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ]
            },
            {
              "id": "94fd3a0e-4d99-4d79-a2fa-650d9834d7ca",
              "name": "Get on-hand quantity details for a location with multiple items",
              "request": {
                "name": "Get on-hand quantity details for a location with multiple items",
                "description": {},
                "url": {
                  "path": [
                    "itemStockingInquiries"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "type": "text/plain"
                      },
                      "key": "expand",
                      "value": "<string>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "type": "text/plain"
                      },
                      "key": "fields",
                      "value": "<string>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "type": "text/plain"
                      },
                      "key": "onlyData",
                      "value": "<boolean>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                        "type": "text/plain"
                      },
                      "key": "links",
                      "value": "<string>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "type": "text/plain"
                      },
                      "key": "limit",
                      "value": "<integer>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "type": "text/plain"
                      },
                      "key": "offset",
                      "value": "<integer>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "type": "text/plain"
                      },
                      "key": "totalResults",
                      "value": "<boolean>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2<br><br>You can use these queryable attributes to filter this collection resource using the q query parameter:<br><ul><li>AvailableToTransact; number; Quantity that is available to transact for an item in a location.</li><li>Description; string; Value that identifies the description of the item.</li><li>InventoryItemId; integer; Value that uniquely identifies the inventory item.</li><li>ItemNumber; string; Number that identifies the inventory item.</li><li>LastCountDate; string; Date when the item was last counted for a location during cycle counting.</li><li>LastReplenishedDate; string; Date when the item was last replenished for a location during par counting.</li><li>Locator; string; Physical area in the subinventory such as a row, aisle, bin, or shelf, that stores the item.</li><li>LocatorId; integer; Value that uniquely identifies the locator.</li><li>LotControlCode; number; Identifies the lot control type for an item.</li><li>LotNumber; string; Number that identifies a lot.</li><li>OrganizationCode; string; Abbreviation that identifies the organization.</li><li>OrganizationId; integer; Value that uniquely identifies the organization.</li><li>PackingStatus; number; Value to indicate the packing status for on-hand quantity in a location.</li><li>ParLocation; integer; Value that indicates if the on-hand quantity is associated with a subinventory that's enabled for a par location inventory.</li><li>PrimaryImageURL; string; Value that provides a reference to the image of the item for which the count sequence is generated.</li><li>PrimaryOnhandQuantity; number; Quantity of the item in the primary unit of measure.</li><li>PrimaryUOMCode; string; Abbreviation that identifies the primary unit of measure.</li><li>PrimaryUnitOfMeasure; string; Primary unit of measure of the item.</li><li>RevisionControlCode; number; Identifies the revision control for an item.</li><li>SerialNumber; string; Serial number of the item in an inventory lot.</li><li>SerialNumberControlCode; number; Identifies the serial number generation method for an item.</li><li>StockingOnhandQuantity; number; Value that indicates the on-hand quantity for an item in the stocking unit of measure of the subinventory.</li><li>StockingUOMCode; string; Value that indicates the unit of measure code in which the items are stocked in a subinventory.</li><li>StockingUnitOfMeasure; string; Value that indicates the unit of measure in which the items are stocked in a subinventory.</li><li>SubinventoryCode; string; Abbreviation that identifies the subinventory in the organization. This value references a physical area or a logical grouping of items such as a storeroom or receiving dock.</li></ul>",
                        "type": "text/plain"
                      },
                      "key": "q",
                      "value": "<string>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "This parameter orders a resource collection based on the specified fields.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "type": "text/plain"
                      },
                      "key": "orderBy",
                      "value": "<string>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds on-hand quantity for items.<br>Finder Variables: <ul><li>InventoryItemId; integer; Value that uniquely identifies the inventory item.</li><li>LocatorId; integer; Value that uniquely identifies the locator in a subinventory.</li><li>LotNumber; string; Value that uniquely identifies the lot number.</li><li>OrganizationId; integer; Value that uniquely identifies the organization.</li><li>SubinventoryCode; string; Value that uniquely identifies the subinventory.</li></ul></li><li>findByProjectTaskCountryOfOrigin: Finds the on-hand quantity of items by project, task, and country of origin.<br>Finder Variables: <ul><li>bindCountryOfOriginCode; string.</li><li>bindProjectId; integer.</li><li>bindTaskId; integer.</li></ul></li></ul>",
                        "type": "text/plain"
                      },
                      "key": "finder",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                      "type": "text/plain"
                    },
                    "key": "REST-Framework-Version",
                    "value": "5"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                      "type": "text/plain"
                    },
                    "key": "Metadata-Context",
                    "value": "<string>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {},
                "auth": null
              },
              "response": [
                {
                  "id": "2284dd0d-dd0c-49cb-94a4-bc190bc97cc3",
                  "name": "The following table describes the default response for this task.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "itemStockingInquiries"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                            "type": "text/plain"
                          },
                          "key": "expand",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                            "type": "text/plain"
                          },
                          "key": "fields",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                            "type": "text/plain"
                          },
                          "key": "onlyData",
                          "value": "<boolean>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                            "type": "text/plain"
                          },
                          "key": "links",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                            "type": "text/plain"
                          },
                          "key": "limit",
                          "value": "<integer>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                            "type": "text/plain"
                          },
                          "key": "offset",
                          "value": "<integer>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                            "type": "text/plain"
                          },
                          "key": "totalResults",
                          "value": "<boolean>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2<br><br>You can use these queryable attributes to filter this collection resource using the q query parameter:<br><ul><li>AvailableToTransact; number; Quantity that is available to transact for an item in a location.</li><li>Description; string; Value that identifies the description of the item.</li><li>InventoryItemId; integer; Value that uniquely identifies the inventory item.</li><li>ItemNumber; string; Number that identifies the inventory item.</li><li>LastCountDate; string; Date when the item was last counted for a location during cycle counting.</li><li>LastReplenishedDate; string; Date when the item was last replenished for a location during par counting.</li><li>Locator; string; Physical area in the subinventory such as a row, aisle, bin, or shelf, that stores the item.</li><li>LocatorId; integer; Value that uniquely identifies the locator.</li><li>LotControlCode; number; Identifies the lot control type for an item.</li><li>LotNumber; string; Number that identifies a lot.</li><li>OrganizationCode; string; Abbreviation that identifies the organization.</li><li>OrganizationId; integer; Value that uniquely identifies the organization.</li><li>PackingStatus; number; Value to indicate the packing status for on-hand quantity in a location.</li><li>ParLocation; integer; Value that indicates if the on-hand quantity is associated with a subinventory that's enabled for a par location inventory.</li><li>PrimaryImageURL; string; Value that provides a reference to the image of the item for which the count sequence is generated.</li><li>PrimaryOnhandQuantity; number; Quantity of the item in the primary unit of measure.</li><li>PrimaryUOMCode; string; Abbreviation that identifies the primary unit of measure.</li><li>PrimaryUnitOfMeasure; string; Primary unit of measure of the item.</li><li>RevisionControlCode; number; Identifies the revision control for an item.</li><li>SerialNumber; string; Serial number of the item in an inventory lot.</li><li>SerialNumberControlCode; number; Identifies the serial number generation method for an item.</li><li>StockingOnhandQuantity; number; Value that indicates the on-hand quantity for an item in the stocking unit of measure of the subinventory.</li><li>StockingUOMCode; string; Value that indicates the unit of measure code in which the items are stocked in a subinventory.</li><li>StockingUnitOfMeasure; string; Value that indicates the unit of measure in which the items are stocked in a subinventory.</li><li>SubinventoryCode; string; Abbreviation that identifies the subinventory in the organization. This value references a physical area or a logical grouping of items such as a storeroom or receiving dock.</li></ul>",
                            "type": "text/plain"
                          },
                          "key": "q",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter orders a resource collection based on the specified fields.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                            "type": "text/plain"
                          },
                          "key": "orderBy",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds on-hand quantity for items.<br>Finder Variables: <ul><li>InventoryItemId; integer; Value that uniquely identifies the inventory item.</li><li>LocatorId; integer; Value that uniquely identifies the locator in a subinventory.</li><li>LotNumber; string; Value that uniquely identifies the lot number.</li><li>OrganizationId; integer; Value that uniquely identifies the organization.</li><li>SubinventoryCode; string; Value that uniquely identifies the subinventory.</li></ul></li><li>findByProjectTaskCountryOfOrigin: Finds the on-hand quantity of items by project, task, and country of origin.<br>Finder Variables: <ul><li>bindCountryOfOriginCode; string.</li><li>bindProjectId; integer.</li><li>bindTaskId; integer.</li></ul></li></ul>",
                            "type": "text/plain"
                          },
                          "key": "finder",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": {
                          "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                          "type": "text/plain"
                        },
                        "key": "REST-Framework-Version",
                        "value": "5"
                      },
                      {
                        "disabled": false,
                        "description": {
                          "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                          "type": "text/plain"
                        },
                        "key": "Metadata-Context",
                        "value": "<string>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Metadata-Context",
                      "value": ""
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "REST-Framework-Version",
                      "value": ""
                    }
                  ],
                  "body": "{\n  \"count\": \"<integer>\",\n  \"hasMore\": \"<boolean>\",\n  \"limit\": \"<integer>\",\n  \"links\": [\n    {\n      \"kind\": \"other\",\n      \"rel\": \"parent\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    },\n    {\n      \"kind\": \"item\",\n      \"rel\": \"custom\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    }\n  ],\n  \"offset\": \"<integer>\",\n  \"totalResults\": \"<integer>\",\n  \"items\": [\n    {\n      \"Description\": \"<string>\",\n      \"OrganizationId\": \"<integer>\",\n      \"SubinventoryCode\": \"<string>\",\n      \"SerialNumberControlCode\": \"<number>\",\n      \"Locator\": \"<string>\",\n      \"ItemNumber\": \"<string>\",\n      \"PackingStatus\": \"<number>\",\n      \"AvailableToTransact\": \"<number>\",\n      \"OrganizationCode\": \"<string>\",\n      \"links\": [\n        {\n          \"kind\": \"describe\",\n          \"rel\": \"enclosure\",\n          \"name\": \"<string>\",\n          \"href\": \"<string>\",\n          \"properties\": {\n            \"changeIndicator\": \"<string>\"\n          }\n        },\n        {\n          \"kind\": \"collection\",\n          \"rel\": \"parent\",\n          \"name\": \"<string>\",\n          \"href\": \"<string>\",\n          \"properties\": {\n            \"changeIndicator\": \"<string>\"\n          }\n        }\n      ],\n      \"PrimaryImageURL\": \"<string>\",\n      \"LotNumber\": \"<string>\",\n      \"PrimaryUOMCode\": \"<string>\",\n      \"StockingUnitOfMeasure\": \"<string>\",\n      \"InventoryItemId\": \"<long>\",\n      \"LocatorId\": \"<integer>\",\n      \"LastReplenishedDate\": \"<dateTime>\",\n      \"StockingUOMCode\": \"<string>\",\n      \"PrimaryUnitOfMeasure\": \"<string>\",\n      \"LotControlCode\": \"<number>\",\n      \"LastCountDate\": \"<dateTime>\",\n      \"SerialNumber\": \"<string>\",\n      \"StockingOnhandQuantity\": \"<number>\",\n      \"ParLocation\": \"<integer>\",\n      \"PrimaryOnhandQuantity\": \"<number>\",\n      \"RevisionControlCode\": \"<number>\"\n    },\n    {\n      \"Description\": \"<string>\",\n      \"OrganizationId\": \"<integer>\",\n      \"SubinventoryCode\": \"<string>\",\n      \"SerialNumberControlCode\": \"<number>\",\n      \"Locator\": \"<string>\",\n      \"ItemNumber\": \"<string>\",\n      \"PackingStatus\": \"<number>\",\n      \"AvailableToTransact\": \"<number>\",\n      \"OrganizationCode\": \"<string>\",\n      \"links\": [\n        {\n          \"kind\": \"describe\",\n          \"rel\": \"enclosure\",\n          \"name\": \"<string>\",\n          \"href\": \"<string>\",\n          \"properties\": {\n            \"changeIndicator\": \"<string>\"\n          }\n        },\n        {\n          \"kind\": \"collection\",\n          \"rel\": \"parent\",\n          \"name\": \"<string>\",\n          \"href\": \"<string>\",\n          \"properties\": {\n            \"changeIndicator\": \"<string>\"\n          }\n        }\n      ],\n      \"PrimaryImageURL\": \"<string>\",\n      \"LotNumber\": \"<string>\",\n      \"PrimaryUOMCode\": \"<string>\",\n      \"StockingUnitOfMeasure\": \"<string>\",\n      \"InventoryItemId\": \"<long>\",\n      \"LocatorId\": \"<integer>\",\n      \"LastReplenishedDate\": \"<dateTime>\",\n      \"StockingUOMCode\": \"<string>\",\n      \"PrimaryUnitOfMeasure\": \"<string>\",\n      \"LotControlCode\": \"<number>\",\n      \"LastCountDate\": \"<dateTime>\",\n      \"SerialNumber\": \"<string>\",\n      \"StockingOnhandQuantity\": \"<number>\",\n      \"ParLocation\": \"<integer>\",\n      \"PrimaryOnhandQuantity\": \"<number>\",\n      \"RevisionControlCode\": \"<number>\"\n    }\n  ]\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "key": "baseUrl",
      "value": "/"
    }
  ]
}