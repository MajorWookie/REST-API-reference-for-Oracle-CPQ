{
  "info": {
    "_postman_id": "78a3a941-c817-45ff-b48a-fd1d96ce4eb1",
    "name": "Assetlogicalhierarchyrelationships",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "<div>\n<span style=\"color: #c74634\">Last Updated July 2025</span><br><br>\n<p>You can use Oracle REST APIs to view and manage data stored in Oracle Supply Chain Management Cloud.</p><p>Whether you're experienced with or new to REST, use this guide to find what you need, including:</p><ul><li>A quick start that walks you through a simple request example.</li><li>Detailed descriptions for each REST API resource.</li></ul></div>\n",
      "type": "text/plain"
    }
  },
  "item": [
    {
      "name": "Assetlogicalhierarchyrelationships",
      "description": "",
      "item": [
        {
          "name": "assetLogicalHierarchyRelationships",
          "description": "",
          "item": [
            {
              "name": "{RelationshipId}",
              "description": "",
              "item": [
                {
                  "id": "d7e9c001-bc00-40e3-9146-731893eea67e",
                  "name": "Get one relationship",
                  "request": {
                    "name": "Get one relationship",
                    "description": {},
                    "url": {
                      "path": [
                        "assetLogicalHierarchyRelationships",
                        ":RelationshipId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                            "type": "text/plain"
                          },
                          "key": "expand",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                            "type": "text/plain"
                          },
                          "key": "fields",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                            "type": "text/plain"
                          },
                          "key": "onlyData",
                          "value": "<boolean>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter specifies dependencies which are fields that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The fields specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the fields will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency fields.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                            "type": "text/plain"
                          },
                          "key": "dependency",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                            "type": "text/plain"
                          },
                          "key": "links",
                          "value": "<string>"
                        }
                      ],
                      "variable": [
                        {
                          "type": "any",
                          "value": "<long>",
                          "key": "RelationshipId",
                          "disabled": false,
                          "description": {
                            "content": "(Required) Value that uniquely identifies the relationship between the parent node and a child node. A node can be a hierarchy, asset, and so on.",
                            "type": "text/plain"
                          }
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": {
                          "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                          "type": "text/plain"
                        },
                        "key": "REST-Framework-Version",
                        "value": "5"
                      },
                      {
                        "disabled": false,
                        "description": {
                          "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                          "type": "text/plain"
                        },
                        "key": "Metadata-Context",
                        "value": "<string>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {},
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "0a7e40ed-a960-414b-8882-b7957555da49",
                      "name": "The following table describes the default response for this task.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "assetLogicalHierarchyRelationships",
                            ":RelationshipId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [
                            {
                              "disabled": false,
                              "description": {
                                "content": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                                "type": "text/plain"
                              },
                              "key": "expand",
                              "value": "<string>"
                            },
                            {
                              "disabled": false,
                              "description": {
                                "content": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                                "type": "text/plain"
                              },
                              "key": "fields",
                              "value": "<string>"
                            },
                            {
                              "disabled": false,
                              "description": {
                                "content": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                                "type": "text/plain"
                              },
                              "key": "onlyData",
                              "value": "<boolean>"
                            },
                            {
                              "disabled": false,
                              "description": {
                                "content": "This parameter specifies dependencies which are fields that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The fields specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the fields will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency fields.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                                "type": "text/plain"
                              },
                              "key": "dependency",
                              "value": "<string>"
                            },
                            {
                              "disabled": false,
                              "description": {
                                "content": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                                "type": "text/plain"
                              },
                              "key": "links",
                              "value": "<string>"
                            }
                          ],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": {
                              "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                              "type": "text/plain"
                            },
                            "key": "REST-Framework-Version",
                            "value": "5"
                          },
                          {
                            "disabled": false,
                            "description": {
                              "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                              "type": "text/plain"
                            },
                            "key": "Metadata-Context",
                            "value": "<string>"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "Metadata-Context",
                          "value": ""
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "REST-Framework-Version",
                          "value": ""
                        }
                      ],
                      "body": "{\n  \"SubjectTypeMeaning\": \"<string>\",\n  \"HierarchyCode\": \"<string>\",\n  \"ObjectAssetNumber\": \"<string>\",\n  \"SubjectHierarchyDescription\": \"<string>\",\n  \"SubjectAssetOperationOrganization\": \"<string>\",\n  \"HierarchyDescription\": \"<string>\",\n  \"ObjectHierarchyName\": \"<string>\",\n  \"ObjectType\": \"A\",\n  \"SubjectAssetNumber\": \"<string>\",\n  \"SubjectType\": \"A\",\n  \"ObjectAssetDescription\": \"<string>\",\n  \"SubjectHierarchyCode\": \"<string>\",\n  \"links\": [\n    {\n      \"kind\": \"collection\",\n      \"rel\": \"action\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    },\n    {\n      \"kind\": \"other\",\n      \"rel\": \"parent\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    }\n  ],\n  \"SubjectId\": \"<long>\",\n  \"SubjectHierarchyName\": \"<string>\",\n  \"ObjectId\": \"<long>\",\n  \"HierarchyName\": \"<string>\",\n  \"ObjectAssetOperationOrganization\": \"<string>\",\n  \"PositionNumber\": \"<number>\",\n  \"RootHierarchyId\": \"<long>\",\n  \"ObjectHierarchyCode\": \"<string>\",\n  \"HierarchyId\": \"<long>\",\n  \"RelationshipTypeCode\": \"ORA_HIERARCHY\",\n  \"ObjectHierarchyDescription\": \"<string>\",\n  \"SubjectAssetDescription\": \"<string>\",\n  \"RelationshipId\": \"<long>\",\n  \"ObjectTypeMeaning\": \"<string>\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "2cf4228f-08cc-42f0-bc3c-003e7584c7d8",
                  "name": "Delete one relationship",
                  "request": {
                    "name": "Delete one relationship",
                    "description": {},
                    "url": {
                      "path": [
                        "assetLogicalHierarchyRelationships",
                        ":RelationshipId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "value": "<long>",
                          "key": "RelationshipId",
                          "disabled": false,
                          "description": {
                            "content": "(Required) Value that uniquely identifies the relationship between the parent node and a child node. A node can be a hierarchy, asset, and so on.",
                            "type": "text/plain"
                          }
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": {
                          "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                          "type": "text/plain"
                        },
                        "key": "REST-Framework-Version",
                        "value": "5"
                      },
                      {
                        "disabled": false,
                        "description": {
                          "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                          "type": "text/plain"
                        },
                        "key": "Metadata-Context",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {},
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "c7586863-b2a4-4df3-a017-bb67ad88f62a",
                      "name": "No Content. This task does not return elements in the response body.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "assetLogicalHierarchyRelationships",
                            ":RelationshipId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": {
                              "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                              "type": "text/plain"
                            },
                            "key": "REST-Framework-Version",
                            "value": "5"
                          },
                          {
                            "disabled": false,
                            "description": {
                              "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                              "type": "text/plain"
                            },
                            "key": "Metadata-Context",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [],
                      "cookie": [],
                      "_postman_previewlanguage": "text"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                },
                {
                  "id": "8454cdec-c61c-4fe9-b255-7aca50ff9ec6",
                  "name": "Update one relationship",
                  "request": {
                    "name": "Update one relationship",
                    "description": {},
                    "url": {
                      "path": [
                        "assetLogicalHierarchyRelationships",
                        ":RelationshipId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "value": "<long>",
                          "key": "RelationshipId",
                          "disabled": false,
                          "description": {
                            "content": "(Required) Value that uniquely identifies the relationship between the parent node and a child node. A node can be a hierarchy, asset, and so on.",
                            "type": "text/plain"
                          }
                        }
                      ]
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": {
                          "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                          "type": "text/plain"
                        },
                        "key": "REST-Framework-Version",
                        "value": "5"
                      },
                      {
                        "disabled": false,
                        "description": {
                          "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                          "type": "text/plain"
                        },
                        "key": "Metadata-Context",
                        "value": "<string>"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "PATCH",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"ObjectType\": \"A\",\n  \"ObjectAssetNumber\": \"<string>\",\n  \"ObjectId\": \"<long>\",\n  \"PositionNumber\": \"<number>\",\n  \"ObjectHierarchyCode\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "auth": null
                  },
                  "response": [
                    {
                      "id": "8b68e7c7-af78-4711-9b7a-b4236cac0965",
                      "name": "The following table describes the default response for this task.",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "assetLogicalHierarchyRelationships",
                            ":RelationshipId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "disabled": false,
                            "description": {
                              "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                              "type": "text/plain"
                            },
                            "key": "REST-Framework-Version",
                            "value": "5"
                          },
                          {
                            "disabled": false,
                            "description": {
                              "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                              "type": "text/plain"
                            },
                            "key": "Metadata-Context",
                            "value": "<string>"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "PATCH",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"ObjectType\": \"A\",\n  \"ObjectAssetNumber\": \"<string>\",\n  \"ObjectId\": \"<long>\",\n  \"PositionNumber\": \"<number>\",\n  \"ObjectHierarchyCode\": \"<string>\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Internal Server Error",
                      "code": 500,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "Metadata-Context",
                          "value": ""
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "REST-Framework-Version",
                          "value": ""
                        }
                      ],
                      "body": "{\n  \"SubjectTypeMeaning\": \"<string>\",\n  \"HierarchyCode\": \"<string>\",\n  \"ObjectAssetNumber\": \"<string>\",\n  \"SubjectHierarchyDescription\": \"<string>\",\n  \"SubjectAssetOperationOrganization\": \"<string>\",\n  \"HierarchyDescription\": \"<string>\",\n  \"ObjectHierarchyName\": \"<string>\",\n  \"ObjectType\": \"A\",\n  \"SubjectAssetNumber\": \"<string>\",\n  \"SubjectType\": \"A\",\n  \"ObjectAssetDescription\": \"<string>\",\n  \"SubjectHierarchyCode\": \"<string>\",\n  \"links\": [\n    {\n      \"kind\": \"collection\",\n      \"rel\": \"action\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    },\n    {\n      \"kind\": \"other\",\n      \"rel\": \"parent\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    }\n  ],\n  \"SubjectId\": \"<long>\",\n  \"SubjectHierarchyName\": \"<string>\",\n  \"ObjectId\": \"<long>\",\n  \"HierarchyName\": \"<string>\",\n  \"ObjectAssetOperationOrganization\": \"<string>\",\n  \"PositionNumber\": \"<number>\",\n  \"RootHierarchyId\": \"<long>\",\n  \"ObjectHierarchyCode\": \"<string>\",\n  \"HierarchyId\": \"<long>\",\n  \"RelationshipTypeCode\": \"ORA_HIERARCHY\",\n  \"ObjectHierarchyDescription\": \"<string>\",\n  \"SubjectAssetDescription\": \"<string>\",\n  \"RelationshipId\": \"<long>\",\n  \"ObjectTypeMeaning\": \"<string>\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ]
            },
            {
              "id": "933fcff5-a306-413a-bc46-e198ccd7cf81",
              "name": "Get all relationships",
              "request": {
                "name": "Get all relationships",
                "description": {},
                "url": {
                  "path": [
                    "assetLogicalHierarchyRelationships"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "type": "text/plain"
                      },
                      "key": "expand",
                      "value": "<string>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "type": "text/plain"
                      },
                      "key": "fields",
                      "value": "<string>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "type": "text/plain"
                      },
                      "key": "onlyData",
                      "value": "<boolean>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                        "type": "text/plain"
                      },
                      "key": "links",
                      "value": "<string>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "type": "text/plain"
                      },
                      "key": "limit",
                      "value": "<integer>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "type": "text/plain"
                      },
                      "key": "offset",
                      "value": "<integer>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "type": "text/plain"
                      },
                      "key": "totalResults",
                      "value": "<boolean>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2<br><br>You can use these queryable attributes to filter this collection resource using the q query parameter:<br><ul><li>HierarchyCode; string; Abbreviation that identifies the hierarchy instance. You can use either HierarchyId or HierarchyCode during the POST action.</li><li>HierarchyDescription; string; Description of the hierarchy instance.</li><li>HierarchyId; integer; Value that uniquely identifies the hierarchy instance.</li><li>HierarchyName; string; Name of the hierarchy instance.</li><li>ObjectAssetDescription; string; Description of the parent asset instance.</li><li>ObjectAssetNumber; string; Number that identifies a parent asset instance. If the parent type is asset, you can either ObjectId or ObjectAssetNumber during the POST action.</li><li>ObjectAssetOperationOrganization; string; Value of the organization code inside which a parent asset is operated.</li><li>ObjectHierarchyCode; string; Abbreviation that identifies the parent hierarchy instance. If the parent object type is Hierarchy, you can use either ObjectId or ObjectHierarchyCode during the POST action.</li><li>ObjectHierarchyDescription; string; Description of the parent hierarchy instance.</li><li>ObjectHierarchyName; string; Name of the parent hierarchy instance.</li><li>ObjectId; integer; Value that uniquely identifies a parent object instance. For instance, it can be hierarchy identifier or asset identifier.</li><li>ObjectType; string; Type of the parent object. Valid values are H for Hierarchy, A for Asset, and N for Node.</li><li>ObjectTypeMeaning; string; Meaning of the parent object type.</li><li>PositionNumber; number; Number that specifies the order of a child node under its parent.</li><li>RelationshipId; integer; Value that uniquely identifies the relationship between the parent node and a child node. A node can be a hierarchy, asset, and so on.</li><li>RelationshipTypeCode; string; Abbreviation that identifies the type of relationship. This is a read-only value that specifies whether the relationship is a logical relationship or a physical relationship.</li><li>RootHierarchyId; integer; Value that uniquely identifies the root hierarchy instance.</li><li>SubjectAssetDescription; string; Description of the child asset instance.</li><li>SubjectAssetNumber; string; Number that identifies a child object. If the child object type is asset, you can use either SubjectId or SubjectAssetNumber during the POST action.</li><li>SubjectAssetOperationOrganization; string; Value of the organization code inside which a child asset is operated.</li><li>SubjectHierarchyCode; string; Abbreviation that identifies the child hierarchy instance. If the child object type is Hierarchy, you can use either SubjectId or SubjectHierarchyCode during the POST action.</li><li>SubjectHierarchyDescription; string; Description of the child hierarchy instance.</li><li>SubjectHierarchyName; string; Name of the child hierarchy instance.</li><li>SubjectId; integer; Value that uniquely identifies a child object instance. When SubjectType is Asset, this value is a valid asset identifier.</li><li>SubjectType; string; Type of a child object. Valid values are H for Hierarchy, A for Asset, and N for Node.</li><li>SubjectTypeMeaning; string; Meaning of the child object type.</li></ul>",
                        "type": "text/plain"
                      },
                      "key": "q",
                      "value": "<string>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "This parameter orders a resource collection based on the specified fields.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "type": "text/plain"
                      },
                      "key": "orderBy",
                      "value": "<string>"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find logical relationships.<br>Finder Variables: <ul><li>RelationshipId; integer; Value that uniquely identifies the relationship between the parent node and a child node.</li></ul></li></ul>",
                        "type": "text/plain"
                      },
                      "key": "finder",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                      "type": "text/plain"
                    },
                    "key": "REST-Framework-Version",
                    "value": "5"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                      "type": "text/plain"
                    },
                    "key": "Metadata-Context",
                    "value": "<string>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {},
                "auth": null
              },
              "response": [
                {
                  "id": "75f6a1a7-64f3-4f5b-abe5-614a18a915a7",
                  "name": "The following table describes the default response for this task.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "assetLogicalHierarchyRelationships"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "disabled": false,
                          "description": {
                            "content": "When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                            "type": "text/plain"
                          },
                          "key": "expand",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter filters the resource fields. Only the specified fields are returned, which means that if no fields are specified, no fields are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource fields. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                            "type": "text/plain"
                          },
                          "key": "fields",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "The resource item payload will be filtered in order to contain only data (no links section, for example).",
                            "type": "text/plain"
                          },
                          "key": "onlyData",
                          "value": "<boolean>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter can be used to show only certain links while accessing a singular resource or a resource collection. The parameter value format is a comma-separated list of : &lt;link_relation&gt;<br><br>Example:<br>self,canonical<br>",
                            "type": "text/plain"
                          },
                          "key": "links",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                            "type": "text/plain"
                          },
                          "key": "limit",
                          "value": "<integer>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                            "type": "text/plain"
                          },
                          "key": "offset",
                          "value": "<integer>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                            "type": "text/plain"
                          },
                          "key": "totalResults",
                          "value": "<boolean>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2<br><br>You can use these queryable attributes to filter this collection resource using the q query parameter:<br><ul><li>HierarchyCode; string; Abbreviation that identifies the hierarchy instance. You can use either HierarchyId or HierarchyCode during the POST action.</li><li>HierarchyDescription; string; Description of the hierarchy instance.</li><li>HierarchyId; integer; Value that uniquely identifies the hierarchy instance.</li><li>HierarchyName; string; Name of the hierarchy instance.</li><li>ObjectAssetDescription; string; Description of the parent asset instance.</li><li>ObjectAssetNumber; string; Number that identifies a parent asset instance. If the parent type is asset, you can either ObjectId or ObjectAssetNumber during the POST action.</li><li>ObjectAssetOperationOrganization; string; Value of the organization code inside which a parent asset is operated.</li><li>ObjectHierarchyCode; string; Abbreviation that identifies the parent hierarchy instance. If the parent object type is Hierarchy, you can use either ObjectId or ObjectHierarchyCode during the POST action.</li><li>ObjectHierarchyDescription; string; Description of the parent hierarchy instance.</li><li>ObjectHierarchyName; string; Name of the parent hierarchy instance.</li><li>ObjectId; integer; Value that uniquely identifies a parent object instance. For instance, it can be hierarchy identifier or asset identifier.</li><li>ObjectType; string; Type of the parent object. Valid values are H for Hierarchy, A for Asset, and N for Node.</li><li>ObjectTypeMeaning; string; Meaning of the parent object type.</li><li>PositionNumber; number; Number that specifies the order of a child node under its parent.</li><li>RelationshipId; integer; Value that uniquely identifies the relationship between the parent node and a child node. A node can be a hierarchy, asset, and so on.</li><li>RelationshipTypeCode; string; Abbreviation that identifies the type of relationship. This is a read-only value that specifies whether the relationship is a logical relationship or a physical relationship.</li><li>RootHierarchyId; integer; Value that uniquely identifies the root hierarchy instance.</li><li>SubjectAssetDescription; string; Description of the child asset instance.</li><li>SubjectAssetNumber; string; Number that identifies a child object. If the child object type is asset, you can use either SubjectId or SubjectAssetNumber during the POST action.</li><li>SubjectAssetOperationOrganization; string; Value of the organization code inside which a child asset is operated.</li><li>SubjectHierarchyCode; string; Abbreviation that identifies the child hierarchy instance. If the child object type is Hierarchy, you can use either SubjectId or SubjectHierarchyCode during the POST action.</li><li>SubjectHierarchyDescription; string; Description of the child hierarchy instance.</li><li>SubjectHierarchyName; string; Name of the child hierarchy instance.</li><li>SubjectId; integer; Value that uniquely identifies a child object instance. When SubjectType is Asset, this value is a valid asset identifier.</li><li>SubjectType; string; Type of a child object. Valid values are H for Hierarchy, A for Asset, and N for Node.</li><li>SubjectTypeMeaning; string; Meaning of the child object type.</li></ul>",
                            "type": "text/plain"
                          },
                          "key": "q",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "This parameter orders a resource collection based on the specified fields.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                            "type": "text/plain"
                          },
                          "key": "orderBy",
                          "value": "<string>"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find logical relationships.<br>Finder Variables: <ul><li>RelationshipId; integer; Value that uniquely identifies the relationship between the parent node and a child node.</li></ul></li></ul>",
                            "type": "text/plain"
                          },
                          "key": "finder",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": {
                          "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                          "type": "text/plain"
                        },
                        "key": "REST-Framework-Version",
                        "value": "5"
                      },
                      {
                        "disabled": false,
                        "description": {
                          "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                          "type": "text/plain"
                        },
                        "key": "Metadata-Context",
                        "value": "<string>"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Metadata-Context",
                      "value": ""
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "REST-Framework-Version",
                      "value": ""
                    }
                  ],
                  "body": "{\n  \"count\": \"<integer>\",\n  \"hasMore\": \"<boolean>\",\n  \"limit\": \"<integer>\",\n  \"links\": [\n    {\n      \"kind\": \"other\",\n      \"rel\": \"child\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    },\n    {\n      \"kind\": \"describe\",\n      \"rel\": \"self\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    }\n  ],\n  \"offset\": \"<integer>\",\n  \"totalResults\": \"<integer>\",\n  \"items\": [\n    {\n      \"SubjectTypeMeaning\": \"<string>\",\n      \"HierarchyCode\": \"<string>\",\n      \"ObjectAssetNumber\": \"<string>\",\n      \"SubjectHierarchyDescription\": \"<string>\",\n      \"SubjectAssetOperationOrganization\": \"<string>\",\n      \"HierarchyDescription\": \"<string>\",\n      \"ObjectHierarchyName\": \"<string>\",\n      \"ObjectType\": \"A\",\n      \"SubjectAssetNumber\": \"<string>\",\n      \"SubjectType\": \"A\",\n      \"ObjectAssetDescription\": \"<string>\",\n      \"SubjectHierarchyCode\": \"<string>\",\n      \"links\": [\n        {\n          \"kind\": \"describe\",\n          \"rel\": \"lov\",\n          \"name\": \"<string>\",\n          \"href\": \"<string>\",\n          \"properties\": {\n            \"changeIndicator\": \"<string>\"\n          }\n        },\n        {\n          \"kind\": \"collection\",\n          \"rel\": \"parent\",\n          \"name\": \"<string>\",\n          \"href\": \"<string>\",\n          \"properties\": {\n            \"changeIndicator\": \"<string>\"\n          }\n        }\n      ],\n      \"SubjectId\": \"<long>\",\n      \"SubjectHierarchyName\": \"<string>\",\n      \"ObjectId\": \"<long>\",\n      \"HierarchyName\": \"<string>\",\n      \"ObjectAssetOperationOrganization\": \"<string>\",\n      \"PositionNumber\": \"<number>\",\n      \"RootHierarchyId\": \"<long>\",\n      \"ObjectHierarchyCode\": \"<string>\",\n      \"HierarchyId\": \"<long>\",\n      \"RelationshipTypeCode\": \"ORA_HIERARCHY\",\n      \"ObjectHierarchyDescription\": \"<string>\",\n      \"SubjectAssetDescription\": \"<string>\",\n      \"RelationshipId\": \"<long>\",\n      \"ObjectTypeMeaning\": \"<string>\"\n    },\n    {\n      \"SubjectTypeMeaning\": \"<string>\",\n      \"HierarchyCode\": \"<string>\",\n      \"ObjectAssetNumber\": \"<string>\",\n      \"SubjectHierarchyDescription\": \"<string>\",\n      \"SubjectAssetOperationOrganization\": \"<string>\",\n      \"HierarchyDescription\": \"<string>\",\n      \"ObjectHierarchyName\": \"<string>\",\n      \"ObjectType\": \"A\",\n      \"SubjectAssetNumber\": \"<string>\",\n      \"SubjectType\": \"A\",\n      \"ObjectAssetDescription\": \"<string>\",\n      \"SubjectHierarchyCode\": \"<string>\",\n      \"links\": [\n        {\n          \"kind\": \"item\",\n          \"rel\": \"self\",\n          \"name\": \"<string>\",\n          \"href\": \"<string>\",\n          \"properties\": {\n            \"changeIndicator\": \"<string>\"\n          }\n        },\n        {\n          \"kind\": \"describe\",\n          \"rel\": \"child\",\n          \"name\": \"<string>\",\n          \"href\": \"<string>\",\n          \"properties\": {\n            \"changeIndicator\": \"<string>\"\n          }\n        }\n      ],\n      \"SubjectId\": \"<long>\",\n      \"SubjectHierarchyName\": \"<string>\",\n      \"ObjectId\": \"<long>\",\n      \"HierarchyName\": \"<string>\",\n      \"ObjectAssetOperationOrganization\": \"<string>\",\n      \"PositionNumber\": \"<number>\",\n      \"RootHierarchyId\": \"<long>\",\n      \"ObjectHierarchyCode\": \"<string>\",\n      \"HierarchyId\": \"<long>\",\n      \"RelationshipTypeCode\": \"ORA_HIERARCHY\",\n      \"ObjectHierarchyDescription\": \"<string>\",\n      \"SubjectAssetDescription\": \"<string>\",\n      \"RelationshipId\": \"<long>\",\n      \"ObjectTypeMeaning\": \"<string>\"\n    }\n  ]\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            },
            {
              "id": "5b6f6cc7-197c-4fbb-83f6-fe40685d7768",
              "name": "Create relationships",
              "request": {
                "name": "Create relationships",
                "description": {},
                "url": {
                  "path": [
                    "assetLogicalHierarchyRelationships"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": false,
                    "description": {
                      "content": "Contains one of the following values: true or false. If true, the server performs an Upsert operation instead of a Create operation. During an Upsert operation, the server attempts to find an existing resource that matches the payload. If a match is found, the server updates the existing resource instead of creating a new one. If not found or false (default), the server performs a Create operation. Note that the Upsert operation isn't supported for date-effective REST resources.",
                      "type": "text/plain"
                    },
                    "key": "Upsert-Mode",
                    "value": "true"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                      "type": "text/plain"
                    },
                    "key": "REST-Framework-Version",
                    "value": "5"
                  },
                  {
                    "disabled": false,
                    "description": {
                      "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                      "type": "text/plain"
                    },
                    "key": "Metadata-Context",
                    "value": "<string>"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"HierarchyCode\": \"<string>\",\n  \"ObjectAssetNumber\": \"<string>\",\n  \"ObjectId\": \"<long>\",\n  \"PositionNumber\": \"<number>\",\n  \"ObjectHierarchyCode\": \"<string>\",\n  \"HierarchyId\": \"<long>\",\n  \"RelationshipTypeCode\": \"ORA_HIERARCHY\",\n  \"ObjectType\": \"A\",\n  \"SubjectAssetNumber\": \"<string>\",\n  \"SubjectType\": \"A\",\n  \"SubjectHierarchyCode\": \"<string>\",\n  \"SubjectId\": \"<long>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "687fe8c3-0354-4415-aae5-6606f6e73785",
                  "name": "The following table describes the default response for this task.",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "assetLogicalHierarchyRelationships"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "disabled": false,
                        "description": {
                          "content": "Contains one of the following values: true or false. If true, the server performs an Upsert operation instead of a Create operation. During an Upsert operation, the server attempts to find an existing resource that matches the payload. If a match is found, the server updates the existing resource instead of creating a new one. If not found or false (default), the server performs a Create operation. Note that the Upsert operation isn't supported for date-effective REST resources.",
                          "type": "text/plain"
                        },
                        "key": "Upsert-Mode",
                        "value": "true"
                      },
                      {
                        "disabled": false,
                        "description": {
                          "content": "The protocol version between a REST client and service. If the client does not specify this header in the request the server will pick a default version for the API.",
                          "type": "text/plain"
                        },
                        "key": "REST-Framework-Version",
                        "value": "5"
                      },
                      {
                        "disabled": false,
                        "description": {
                          "content": "If the REST API supports runtime customizations, the shape of the service may change during runtime. The REST client may isolate itself from these changes or choose to interact with the latest version of the API by specifying this header. For example: Metadata-Context:sandbox=\"TrackEmployeeFeature\".",
                          "type": "text/plain"
                        },
                        "key": "Metadata-Context",
                        "value": "<string>"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"HierarchyCode\": \"<string>\",\n  \"ObjectAssetNumber\": \"<string>\",\n  \"ObjectId\": \"<long>\",\n  \"PositionNumber\": \"<number>\",\n  \"ObjectHierarchyCode\": \"<string>\",\n  \"HierarchyId\": \"<long>\",\n  \"RelationshipTypeCode\": \"ORA_HIERARCHY\",\n  \"ObjectType\": \"A\",\n  \"SubjectAssetNumber\": \"<string>\",\n  \"SubjectType\": \"A\",\n  \"SubjectHierarchyCode\": \"<string>\",\n  \"SubjectId\": \"<long>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Metadata-Context",
                      "value": ""
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "REST-Framework-Version",
                      "value": ""
                    }
                  ],
                  "body": "{\n  \"SubjectTypeMeaning\": \"<string>\",\n  \"HierarchyCode\": \"<string>\",\n  \"ObjectAssetNumber\": \"<string>\",\n  \"SubjectHierarchyDescription\": \"<string>\",\n  \"SubjectAssetOperationOrganization\": \"<string>\",\n  \"HierarchyDescription\": \"<string>\",\n  \"ObjectHierarchyName\": \"<string>\",\n  \"ObjectType\": \"A\",\n  \"SubjectAssetNumber\": \"<string>\",\n  \"SubjectType\": \"A\",\n  \"ObjectAssetDescription\": \"<string>\",\n  \"SubjectHierarchyCode\": \"<string>\",\n  \"links\": [\n    {\n      \"kind\": \"collection\",\n      \"rel\": \"action\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    },\n    {\n      \"kind\": \"other\",\n      \"rel\": \"parent\",\n      \"name\": \"<string>\",\n      \"href\": \"<string>\",\n      \"properties\": {\n        \"changeIndicator\": \"<string>\"\n      }\n    }\n  ],\n  \"SubjectId\": \"<long>\",\n  \"SubjectHierarchyName\": \"<string>\",\n  \"ObjectId\": \"<long>\",\n  \"HierarchyName\": \"<string>\",\n  \"ObjectAssetOperationOrganization\": \"<string>\",\n  \"PositionNumber\": \"<number>\",\n  \"RootHierarchyId\": \"<long>\",\n  \"ObjectHierarchyCode\": \"<string>\",\n  \"HierarchyId\": \"<long>\",\n  \"RelationshipTypeCode\": \"ORA_HIERARCHY\",\n  \"ObjectHierarchyDescription\": \"<string>\",\n  \"SubjectAssetDescription\": \"<string>\",\n  \"RelationshipId\": \"<long>\",\n  \"ObjectTypeMeaning\": \"<string>\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                }
              ],
              "event": [],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [],
  "variable": [
    {
      "key": "baseUrl",
      "value": "/"
    }
  ]
}